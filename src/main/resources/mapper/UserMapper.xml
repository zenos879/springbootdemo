<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.UserDao">
	<select id="selectUserByUsername" parameterType="String"
		resultType="com.example.demo.pojo.User">
		SELECT * FROM t_user WHERE username = #{username}
	</select>
	<select id="selectNicknameByOpenid" parameterType="String"
		resultType="com.example.demo.pojo.UserInfo">
		SELECT * FROM user_info WHERE open_id = #{openId}
	</select>
	<select id="selectIfExit" resultType="Integer"
		parameterType="String">
		select count(1) from user_info where open_id= #{openId};
	</select>
	<select id="selectIfExistUserOperations" resultType="Integer"
		parameterType="String">
		select count(1) from user_operations where
		open_id=#{openId}
	</select>
	<select id="selectIfExistArtOperations" resultType="Integer"
		parameterType="String">
		select count(1) from article_operations where
		art_id=#{art_id}
	</select>
	<select id="queryOperations" resultType="HashMap"
		parameterType="String">
		select collections,histories from user_operations where
		open_id= #{openId};
	</select>
	<update id="updateUser" parameterType="String">
		update user_info set
		nick_name= #{nickName} , avatar_url=#{avatarUrl} ,
		update_time=#{updateTime}, register_cnt=register_cnt+1 where
		open_id=#{openId}
	</update>
	<update id="updateUserOperations" parameterType="String">
		update
		user_operations set
		collections=#{collections},update_time=#{update_time} where
		open_id=#{open_id}
	</update>
	<update id="updateArticleOperations" parameterType="String">
		update
		article_operations set view_times=view_times+1,
		update_time=#{update_time} where art_id=#{art_id}
	</update>
	<update id="updateUserHistories" parameterType="String">
		update
		user_operations set histories=#{histories}
		,update_time=#{update_time}
		where open_id=#{open_id}
	</update>
	<update id="updateUserCreatetimeAndVip">
		update
		user_operations set
		create_time=#{currentTime},vip_left_day=#{default_vip_left_day} where
		open_id=#{openId}
	</update>
	<insert id="insertUserInfo"> insert into
		user_info(open_id,nick_name,register_cnt,avatar_url,update_time,create_time)
		values(#{openId},#{nickName},'1',#{avatarUrl},#{updateTime},#{createTime})
	</insert>
	<insert id="insertUserOperations"> insert into
		user_operations(open_id,collections,histories,vip_left_day,update_time,create_time)
		values(#{open_id},#{collections},#{histories},#{vip_left_day},#{update_time},#{create_time})
	</insert>
	<insert id="insertArticleOperations"> insert into
		article_operations(art_id,collect_times,view_times,update_time,create_time)
		values(#{art_id}
		,#{collection_times},#{view_times},#{update_time},#{create_time})
	</insert>
	<select id="selectUserVipday"	resultType="HashMap" parameterType="String">
		select vip_left_day,create_time from user_operations where
		open_id=#{openId}
	</select>
	<update id="updateUserVipday" parameterType="String">
		update user_operations set vip_left_day=vip_left_day+10
		where open_id=#{open_id}
	</update>
</mapper>